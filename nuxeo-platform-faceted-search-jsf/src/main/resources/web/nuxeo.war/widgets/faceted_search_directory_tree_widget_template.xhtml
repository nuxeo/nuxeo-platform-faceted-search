<div xmlns:h="http://java.sun.com/jsf/html"
  xmlns:nxu="http://nuxeo.org/nxweb/util"
  xmlns:rich="http://richfaces.org/rich"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:c="http://java.sun.com/jstl/core"
  xmlns:a4j="https://ajax4jsf.dev.java.net/ajax" id="#{widget.id}">

<c:if test="false">
  deprecated since 5.7 , the widget type "select_l10n_vocabulary_tree" 
  is used instead
</c:if>
<c:if test="#{widget.mode != 'create' and widget.mode != 'edit'}">

  <span class="labelOpenPopUp"><c:choose>
    <c:when test="#{widget.translated}">
      <span class="subLabel"> <h:outputText
        value="#{messages[widget.label]}" /> </span>
    </c:when>
    <c:otherwise>
      <span class="subLabel"> <h:outputText value="#{widget.label}" />
      </span>
    </c:otherwise>
  </c:choose></span>

  <h:dataTable value="#{field_0}" var="directoryValue"
    rendered="#{not empty field_0}">
    <h:column>
      <h:outputText
        value="#{directoryTreeManager.getLabelFor(widget.properties.directoryTreeName, directoryValue)}" />
    </h:column>
  </h:dataTable>

</c:if> <c:if test="#{widget.mode == 'create' or widget.mode == 'edit'}">

  <script type="text/javascript">
      function showTree(treeId) {
        // hide all trees
        hideAllTrees();

        var tree = jQuery(treeId);
        tree.css('top', 100 + getScrollTop());
        tree.show();
      }

      function hideAllTrees() {
        jQuery('.facetedSearchPopUp').each(function () {
          jQuery(this).hide();
        });
      }

      function hideTree(treeId) {
        jQuery(treeId).hide();
      }

      function getScrollTop() {
        var scrollTop  = document.body.scrollTop  || document.documentElement.scrollTop;
        return scrollTop;
      }

      jQuery(document).keydown(function(event) {
        // escape
        if (event.keyCode == '27') {
          hideAllTrees();
          event.preventDefault();
        }
      });

      jQuery(document).click(function(event) {
        var element = jQuery(event.target);
        if (!(element.is('.facetedSearchPopUp') || element.parents().is('.facetedSearchPopUp')) &amp;&amp; !(element.is('.labelTool') || element.parents().is('.labelTool'))) {
          hideAllTrees();
        }
      });
    </script>

  <span class="labelOpenPopUp"><c:choose>
    <c:when test="#{widget.translated}">
      <span class="subLabel"> <h:outputText
        value="#{messages[widget.label]}" /> </span>
    </c:when>
    <c:otherwise>
      <span class="subLabel"> <h:outputText value="#{widget.label}" />
      </span>
    </c:otherwise>
  </c:choose> <span class="labelTool" onclick="showTree('##{widget.id}_tree');"><img
    src="#{contextPath}/icons/add_popup.png" alt="Pop up" /></span></span>
  <div style="clear: both;"></div>

  <div id="#{widget.id}_tree" class="facetedSearchPopUp">
  <div class="closePopUpHeader"><span class="popUpTitle"><h:outputText
    value="#{messages['label.search.popup.title']}" /></span> <span
    class="closePopUp" onclick="hideTree('##{widget.id}_tree');">
    #{messages['label.search.popup.close']}</span>
  <div style="clear: both;"></div>
  </div>
  <div class="popUpContent"><rich:tree id="#{widget.id}_treeId"
    adviseNodeOpened="#{directoryTreeManager.adviseNodeOpened}"
    changeExpandListener="#{directoryTreeManager.changeExpandListener}"
    icon="#{nodeState.isExpanded(rowKey)?'/icons/folder_open.gif':'/icons/folder.gif'}"
    iconExpanded="/icons/toggle_minus.png"
    iconCollapsed="/icons/toggle_plus.png" rowKeyVar="rowKey"
    stateVar="nodeState">
    <rich:recursiveTreeNodesAdaptor
      id="#{widget.id}_recursiveTreeNodesAdaptorId"
      roots="#{directoryTreeManager.get(widget.properties.directoryTreeName).getChildren()}"
      nodes="#{node.children}" var="node">
      <rich:treeNode id="#{widget.id}_treeNodeId"
        highlightedClass="treeNodeHighlightedClass"
        selectedClass="treeNodeSelectedClass">
        <div class="#{nxu:test(node.selected, 'selected', '')}"
          id="#{node.path}"><a4j:commandLink immediate="true"
          id="#{widget.id}_linkId"
          actionListener="#{treeWidgetActions.addSelectionToList}"
          styleClass="treeLink" reRender="#{widget.id}_listRegion">
          <f:param name="selectionListId" value="#{widget.id}_list" />
          <f:param name="selectedPath" value="#{node.getPath()}" />
          <h:outputText value="#{messages[node.description]}" />
        </a4j:commandLink></div>
      </rich:treeNode>
    </rich:recursiveTreeNodesAdaptor>
  </rich:tree></div>
  </div>

  <a4j:outputPanel id="#{widget.id}_listRegion" ajaxRendered="true" layout="block">
    <table class="dataInput thin">
      <nxu:inputList id="#{widget.id}_list" value="#{field_0}"
        model="model">
        <tr>
          <td>
          <p><h:outputText
            value="#{directoryTreeManager.getLabelFor(widget.properties.directoryTreeName, model.rowData)}" /></p>
          </td>
          <td><a4j:commandLink immediate="true"
            actionListener="#{editableListBean.performAction}"
            id="#{widget.id}_delete" reRender="#{widget.id}_listRegion"
            bypassUpdates="true">
            <img src="#{contextPath}/icons/action_delete_mini_over.png" alt="Delete" />
            <f:param name="for" value="#{widget.id}_list" />
            <f:param name="index" value="#{model.rowIndex}" />
            <f:param name="type" value="remove" />
          </a4j:commandLink></td>
        </tr>
      </nxu:inputList>
    </table>
  </a4j:outputPanel>

</c:if></div>
